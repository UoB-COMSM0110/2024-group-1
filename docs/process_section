
The tools we used included GitHub in order to host and collaborate on the project. We utilised different branches for each feature of the game. This meant we had a working version of the game on the main branch. We used GitHub to submit pull requests to review each other’s code. This ensured that we were all aligned in terms of how we wanted to implement the different features of the game and allowed any merge conflicts to be resolved before being pushed to the main branch. 

We knew that we potentially had a game that would be relatively complex to create due to there being multiple game states that would need to be implemented. Therefore, it was essential to use a Kanban board to keep track of all the different features we wanted to implement and ensure that they could completed in the given timeframe of the project. As a team we delegated different game states to each team member. This meant that each team member had a clear idea of what they should be working on. The Kanban board enabled us to keep track of the different features the team delegated to different members. On reflection, perhaps we could have used the Kanban board more effectively by breaking up the tasks into smaller tasks. For example, creating a task for creating a shop state could have been broken up into the smaller tasks within this. This would give a great sense of the progress that had been made.

In order to communicate, we set up a WhatsApp group chat in order to set up in person meetings. It was also used to check in with each other to assess our progress as a group as well as asking for help with any issues we had. 

We used the software engineering labs as well as weekly in person meetings to check on our progress as a team and identify any ideas we needed to clarify or ask for help with. On reflection it would have been useful to organize an in person meeting just before the Easter holidays to ensure we all had a clear idea on what we should working on each week of the holidays. However, we were still able to communicate effectively throughout the holidays using Whatsapp and Github to ensure we knew what needed to be achieved. Furthermore, to improve our management of the project it could have been useful to factor in the time we would we spending on other assessments we had due in the same time period. This would have given us a more realistic assessment of the time we had to work on the project. 

Following the project schedule of the unit, we concentrated on creating a minimal viable product before then concentrating on other features we wanted to incorporate.
One of the challenges we had was getting a minimal viable prototype working. This mean that we were further behind then we as a group would have liked. Indeed, this mean that it was initially challenging to carry out user testing of the game during the software engineering labs. Instead we resorted to using paper prototypes of our game which meant we still received user feedback and a greater understanding of the think aloud and …. Techniques which we then used on a far more developed version of the game.  Perhaps this was due to the fact that we were working on features individually but made it challenge to ensure smoothing transitioning between the different game states. However, we decided to carry out a game jam which helped us to make effective progress on the game. Having an in-person session meant that we were more aligned on how we wanted to transition between different game states. Indeed, one of the issues we had as a team was that we were not effectively using the game engine one of our team members had created. Yet having a game jam allowed us to communicate about this issue and ensure we all used it correctly.  Furthermore, it meant that we help each other to quickly fix bugs in each other’s code

